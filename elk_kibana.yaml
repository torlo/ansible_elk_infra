- name: Playbook for configure kibana
  hosts: "{{ remote_hosts }}"
  strategy: linear
  remote_user: ansible
  become: yes
  become_method: sudo

  vars:


  tasks:
    - name: install kibana and nginx
      yum: name={{ item }} state=present
      with_items:
        - kibana
        - nginx
        - certbot
        - python2-certbot-nginx

    - name: Disable SELinux
      shell: "sudo setsebool httpd_can_network_connect 1 -P"
      ignore_errors: yes

    - name: configure NGINX
      copy: src=/etc/ansible/inventory/vars/elk_cluster/kibana/nginx_default.conf.j2 dest=/etc/nginx/conf.d/default.conf

    - name: Copy Configure Certbot
      copy: src=/etc/ansible/inventory/vars/elk_cluster/kibana/le.tar dest=/etc/letsencrypt/le.tar

    - name: Copy Configure Kibana
      copy: src=/etc/ansible/inventory/vars/elk_cluster/kibana/kibana.yml.j2 dest=/etc/kibana/kibana.yml

    - name: Decompress conf files
      shell: "cd /etc/letsencrypt/ && tar -xf le.tar"

    - name: Install oauth2
      copy: src=/etc/ansible/inventory/vars/elk_cluster/kibana/oauth2_proxy  dest=/sbin/oauth2_proxy

    - name: Define execution rights for oauth2
      shell: "chmod 744 /sbin/oauth2_proxy"

    - name: Configure oauth2
      copy: src=/etc/ansible/inventory/vars/elk_cluster/kibana/oauth_proxy.cfg.j2  dest=/etc/oauth2_proxy.cfg

    - name: Define oauth2 as service
      copy: src=/etc/ansible/inventory/vars/elk_cluster/kibana/oauth2.service.j2  dest=/etc/systemd/system/oauth2.service

    - name: Reload systemctl daemon
      shell: "systemctl daemon-reload"

    - name: Start nginx service
      service: name=nginx state=started enabled=yes

    - name: clear elk data 1
      shell: "curl -XDELETE http://elastic1.local:9200/.kibana_1"
      ignore_errors: yes

    - name: clear elk data 2
      shell: "curl -XDELETE http://elastic1.local:9200/.kibana_2"
      ignore_errors: yes

    - name: Start kibana service
      service: name=kibana state=started enabled=yes

    - name: Start oauth2 service
      service: name=oauth2 state=started enabled=yes
